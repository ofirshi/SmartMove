# Copyright (c) Microsoft Corporation.
# Licensed under the MIT license.

# This continuous integration pipeline is triggered anytime a user pushes code to the repo.
# This pipeline builds the Wpf project, runs unit tests, then saves the MSIX build artifact.
name:  Wpf Continuous Integration

# https://github.com/microsoft/github-actions-for-desktop-apps/blob/main/.github/workflows/ci.yml
# Trigger on every master branch push and pull request
on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  setup-version:
    runs-on: ${{ matrix.operating-system }}
    strategy:
      fail-fast: false
  #build:
    #strategy:
      matrix:
        targetplatform: [x86, x64]
        configuration: [Debug, Release]
        operating-system: [ubuntu-latest, windows-latest, macOS-latest]
        dotnet-version: ['2.1', '2.2', '3.0', '3.1', '5.0']

    #runs-on: windows-latest

    env:
      Solution_Path: SmartMove.sln
      Wpf_Project_Path: SmartMove\SmartMove.csproj
      Actions_Allow_Unsecure_Commands: true # Allows AddPAth and SetEnv commands

    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0 # avoid shallow clone so nbgv can do its work.

    # Use Nerdbank.GitVersioning to set version variables: https://github.com/AArnott/nbgv
    - name: Use Nerdbank.GitVersioning to set version variables
      uses: aarnott/nbgv@v0.3
      with:
        setAllVars: true

    # Install the .NET Core workload
    - name: Install .NET Core
      uses: actions/setup-dotnet@v1
      with:
        #dotnet-version: '3.1.302'
        dotnet-version: ${{ matrix.dotnet-version }}

    # Add  MsBuild to the PATH: https://github.com/microsoft/setup-msbuild
    - name: Setup MSBuild.exe
      uses: microsoft/setup-msbuild@v1.0.1

      
    # Build the Windows Application Packaging project
    - name: Build the Windows Application Packaging Project (wapproj)
      run: msbuild $env:Solution_Path /p:Platform=$env:AnyPlatform /p:Configuration=$env:Configuration /p:UapAppxPackageBuildMode=$env:BuildMode /p:AppxBundle=$env:AppxBundle
      env:
        AppxBundle: Never
        BuildMode: SideloadOnly
        Configuration: ${{ matrix.configuration }}
        AnyPlatform: "Any CPU"

